package simpleLib;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.HashMap;import java.util.Map;import java.util.Scanner;import java.util.Set;import java.util.Map.Entry;public abstract class ConsoleUserInterface {	protected static LibSystem libs;	protected static Scanner sc = new Scanner(System.in);	String title;	HashMap<Integer, String> menuOptions;	/**	 * Abstract method. To be implemented by subclasses.	 */	protected abstract boolean parseInput(int choice);	public void printMenu() {		printMenu(title, menuOptions);	}	public void printMenu(String title, HashMap<Integer, String> menuOptions) {		System.out.println("");		System.out.println("====================================================================================");		System.out.println(String.format("|  %-80s|", title));		System.out.println("====================================================================================");		System.out.println(String.format("|  %-80s|", "Options:"));		for (Entry<Integer, String> entry : menuOptions.entrySet()) {			System.out.println(String.format("| %-4s %-76s|", entry.getKey()					+ ".", entry.getValue()));		}		System.out.println("====================================================================================");	}	protected void DisplayDocuments(String prompt,			Map<Integer, Object> items) {		HashMap<Integer, String> itemStrings = new HashMap<Integer, String>();		for (Entry<Integer, Object> entry : items.entrySet()) {			itemStrings.put(entry.getKey(), entry.getValue().toString());		}		printMenu(prompt, itemStrings);	}	protected int GetSelection(String prompt, Set<Integer> acceptedValues) { 		int userSelection = -1;		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		System.out.println(prompt);		String input = "-1";		while (!acceptedValues.contains(userSelection)) {			try {				input = br.readLine();			} catch (IOException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}			userSelection = Integer.parseInt(input);		}		return userSelection;	}		protected void displayLoanedItems() {		HashMap<Integer, Object> results = null;		if (libs.getCurrentUser() instanceof Librarian)			results = libs.getAllLoanedItems();		else			results = libs.getLoanedItems(libs.getCurrentUser());		DisplayDocuments("Loaned items for " + libs.getCurrentUser() + ":", results);		System.out.println("Please press enter to continue...");		sc.nextLine();	}}