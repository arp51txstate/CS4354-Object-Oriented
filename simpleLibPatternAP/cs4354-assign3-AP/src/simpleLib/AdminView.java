package simpleLib;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.HashMap;import simpleLib.LibSystem.MenuState;public class AdminView extends ConsoleUserInterface {  public AdminView (LibSystem lib) {    AdminView.libs = lib;        title = "Administrator Menu - " + lib.getCurrentUser();    menuOptions = new HashMap<Integer, String>();    menuOptions.put(new Integer(1), "Add User");    menuOptions.put(new Integer(2), "Remove User");    menuOptions.put(new Integer(3), "List Users");    menuOptions.put(new Integer(4), "Go Back");  }  	public boolean parseInput(int choice) {  		switch (choice) {		case 1:			libs.addUser(createUser());			break;		case 2:			removeUser();			break;		case 3:			listUsers();			break;		case 4:			libs.setMenu(MenuState.MAIN_MENU);			break;  		default:  			System.err.println("Please select a number between 1 and 4.");  		}  		return false;  	}		private void listUsers() {		HashMap<Integer, Object> userList = libs.getCurrentUsers();		DisplayDocuments("List of current users:", userList);		System.out.println("Please press enter to continue...");		sc.nextLine();			}	private LibraryUser createUser() {		LibraryUser newUser = null;		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		String username = "";		String password = "";		try {			System.out.println("Please enter the new username: ");			username = br.readLine();			System.out.println("Please enter the new user's password: ");			password = br.readLine();		} catch (IOException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}		HashMap<Integer, String> addUserOptions = new HashMap<Integer, String>();		addUserOptions.put(new Integer(1), "Student");		addUserOptions.put(new Integer(2), "Librarian");		addUserOptions.put(new Integer(3), "Admin");		addUserOptions.put(new Integer(4), "Cancel");		printMenu("User Type?", addUserOptions);		boolean isUserTypeSelected = false;		while (!isUserTypeSelected) {		    // Read line and try to call parseInt on it.		    String line = null;			try {				line = br.readLine();			} catch (IOException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}		    int result;		    try {		    	result = Integer.parseInt(line);		    } catch (NumberFormatException exception) {		    	result = 0;		    }		    switch (result) {		    case 1:		    	newUser = new LibraryUser(username, password, "1");		    	isUserTypeSelected = true;		    	break;		    case 2:		    	newUser = new Librarian(username, password, "1");		    	isUserTypeSelected = true;		    	break;		    case 3:		    	newUser = new Administrator(username, password, "1");		    	isUserTypeSelected = true;		    	break;		    case 4:		    	return null;		    default:		    	System.out.println("Invalid selection made...");		    }		}		return newUser;	}		private void removeUser() {		HashMap<Integer, Object> userList = libs.getCurrentUsers();		userList.put(0, "Go Back");		DisplayDocuments("List of current users:", userList);		int itemSelection = GetSelection("Please enter selection: ", userList.keySet());		if (itemSelection != 0)			libs.removeUser((LibraryUser) userList.get(itemSelection));			}	  }